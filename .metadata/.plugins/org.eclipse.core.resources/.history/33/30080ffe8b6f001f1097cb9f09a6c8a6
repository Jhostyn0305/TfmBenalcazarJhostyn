package tfm.model.core.entities;

import java.io.Serializable;
import javax.persistence.*;
import java.math.BigDecimal;
import java.util.List;


/**
 * The persistent class for the products database table.
 * 
 */
@Entity
@Table(name="products")
@NamedQuery(name="Product.findAll", query="SELECT p FROM Product p")
public class Product implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name="id_product")
	private Integer idProduct;

	private String description;

	private String name;

	private BigDecimal price;

	@Column(name="url_image")
	private String urlImage;

	//bi-directional many-to-one association to Category
	@ManyToOne
	@JoinColumn(name="id_category")
	private Category category;

	//bi-directional many-to-one association to VentDetail
	@OneToMany(mappedBy="product")
	private List<VentDetail> ventDetails;

	public Product() {
	}

	public Integer getIdProduct() {
		return this.idProduct;
	}

	public void setIdProduct(Integer idProduct) {
		this.idProduct = idProduct;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public BigDecimal getPrice() {
		return this.price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	public String getUrlImage() {
		return this.urlImage;
	}

	public void setUrlImage(String urlImage) {
		this.urlImage = urlImage;
	}

	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	public List<VentDetail> getVentDetails() {
		return this.ventDetails;
	}

	public void setVentDetails(List<VentDetail> ventDetails) {
		this.ventDetails = ventDetails;
	}

	public VentDetail addVentDetail(VentDetail ventDetail) {
		getVentDetails().add(ventDetail);
		ventDetail.setProduct(this);

		return ventDetail;
	}

	public VentDetail removeVentDetail(VentDetail ventDetail) {
		getVentDetails().remove(ventDetail);
		ventDetail.setProduct(null);

		return ventDetail;
	}

}